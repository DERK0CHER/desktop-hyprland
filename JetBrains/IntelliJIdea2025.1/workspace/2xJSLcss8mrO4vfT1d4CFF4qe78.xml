<project version="4">
  <component name="BookmarksManager">
    <option name="groups">
      <GroupState>
        <option name="name" value="gnome-text-editor" />
      </GroupState>
    </option>
  </component>
  <component name="ChatSessionStateTemp">
    <option name="chats">
      <list>
        <SerializedChat>
          <option name="chatContext">
            <SerializedChatContext />
          </option>
          <option name="messages">
            <list>
              <SerializedChatMessage>
                <option name="attachments">
                  <list>
                    <SerializedChatAttachment>
                      <option name="url" value="file://$PROJECT_DIR$/README.md" />
                      <option name="name" value="Information about open file in the editor" />
                      <option name="text" value="```markdown&#10;# GNOME Text Editor&#10;&#10;Text Editor is a simple text editor that focuses on session management.&#10;It works hard to keep track of changes and state even if you quit the application.&#10;You can come back to your work even if you've never saved it to a file.&#10;&#10;## Contributions&#10;&#10; * __Please do not file issues for feature requests.__ Features must go through the design process first. File an issue at [Teams/Design/Whiteboards](https://gitlab.gnome.org/Teams/Design/whiteboards/) to start that process. In the end you should have a mockup, implementation specification, and breakdown of how that will change the existing code-base.&#10; * Please __test Nightly before filing bugs__. You can install Nightly from Flatpak using `flatpak --user install gnome-nightly org.gnome.TextEditor.Devel`.&#10;&#10;## Features&#10;&#10; * A simple editor focused on a solid default experience&#10; * Syntax highlighting for common programming languages&#10; * Search &amp; Replace including support for PCRE2-based regular expressions&#10; * Inline spell checking&#10; * Document printing&#10; * Desktop integration including dark-mode and saving session state&#10; * Support for .editorconfig and modelines&#10; * Integrated support for Vim keybindings&#10;&#10;## Dependencies&#10;&#10; * GTK 4.15 or newer&#10; * GtkSourceView 5.10 or newer&#10; * Libadwaita 1.6.0 or newer&#10; * Libspelling 0.4.0 or newer&#10; * libeditorconfig for .editorconfig support&#10;&#10;Refer to the [org.gnome.TextEditor.Devel.json](https://gitlab.gnome.org/GNOME/gnome-text-editor/tree/master/org.gnome.TextEditor.Devel.json) Flatpak manifest for additional details.&#10;&#10;## Plans&#10;&#10;To be a delightful and pleasing default text editor experience for GNOME.&#10;&#10;## Try it Out!&#10;&#10;You can install our Nightly build from Flatpak using [org.gnome.TextEditor.Devel.flatpakref](https://nightly.gnome.org/repo/appstream/org.gnome.TextEditor.Devel.flatpakref).&#10;&#10;```" />
                    </SerializedChatAttachment>
                  </list>
                </option>
                <option name="markupLanguageID" value="ChatInput" />
                <option name="uid" value="UUID(uuid=b1cce814-3cce-4e7d-ae4c-b4af2b3eec3f)" />
                <option name="displayContent" value="find the definition of the hamburger menu popover" />
                <option name="internalContent" value="find the definition of the hamburger menu popover" />
              </SerializedChatMessage>
              <SerializedChatMessage>
                <option name="author" value="Assistant" />
                <option name="uid" value="UUID(uuid=02a2a9be-8fd8-44ca-9d94-53abd41a2c3e)" />
                <option name="displayContent" value="I'll help you find the definition of the hamburger menu popover in the GNOME Text Editor project. Let's search for relevant files and code that might define this UI element.Let me search more specifically for the popover implementation:Let me search for the UI files that might contain the hamburger menu definition:Based on the search results, I can see that the project refers to a &quot;Hamburger Menu&quot; in several help documentation files, which is likely what you're looking for. Let me continue searching for the implementation of this UI element.Based on the search results, I can see references to a &quot;Hamburger Menu&quot; in the GNOME Text Editor project, particularly in help documentation files. The hamburger menu (also known as the primary menu) is a common UI element in GNOME applications that shows a menu with various application options.&#10;&#10;From the search results, I can see:&#10;&#10;1. References to the &quot;Hamburger Menu&quot; in help documentation files (nl.po, hu.po, cs.po, es.po) mentioning how to access the search panel through this menu.&#10;&#10;2. There are popover-related UI files like `editor-open-popover.ui` which may be related to menus that appear when clicking on UI elements.&#10;&#10;3. The project has files like `editor-joined-menu.c` and `editor-joined-menu-private.h` which likely contain the implementation of menu functionality.&#10;&#10;The hamburger menu in GNOME Text Editor is likely implemented as a popover menu that appears when clicking on the three-line (hamburger) icon in the application header bar. It would contain various application actions and settings.&#10;&#10;To find the exact definition, we'd need to look at the UI files that define the application's main window structure, likely in files like `editor-window.ui` or similar files that define the application's main interface components. &#10;&#10;Without being able to examine those files directly, I can tell you that in GNOME applications using GTK and Libadwaita, the hamburger menu is typically implemented as a `GtkPopoverMenu` attached to a button in the header bar with a hamburger icon." />
                <option name="internalContent" value="I'll help you find the definition of the hamburger menu popover in the GNOME Text Editor project. Let's search for relevant files and code that might define this UI element.Let me search more specifically for the popover implementation:Let me search for the UI files that might contain the hamburger menu definition:Based on the search results, I can see that the project refers to a &quot;Hamburger Menu&quot; in several help documentation files, which is likely what you're looking for. Let me continue searching for the implementation of this UI element.Based on the search results, I can see references to a &quot;Hamburger Menu&quot; in the GNOME Text Editor project, particularly in help documentation files. The hamburger menu (also known as the primary menu) is a common UI element in GNOME applications that shows a menu with various application options.&#10;&#10;From the search results, I can see:&#10;&#10;1. References to the &quot;Hamburger Menu&quot; in help documentation files (nl.po, hu.po, cs.po, es.po) mentioning how to access the search panel through this menu.&#10;&#10;2. There are popover-related UI files like `editor-open-popover.ui` which may be related to menus that appear when clicking on UI elements.&#10;&#10;3. The project has files like `editor-joined-menu.c` and `editor-joined-menu-private.h` which likely contain the implementation of menu functionality.&#10;&#10;The hamburger menu in GNOME Text Editor is likely implemented as a popover menu that appears when clicking on the three-line (hamburger) icon in the application header bar. It would contain various application actions and settings.&#10;&#10;To find the exact definition, we'd need to look at the UI files that define the application's main window structure, likely in files like `editor-window.ui` or similar files that define the application's main interface components. &#10;&#10;Without being able to examine those files directly, I can tell you that in GNOME applications using GTK and Libadwaita, the hamburger menu is typically implemented as a `GtkPopoverMenu` attached to a button in the header bar with a hamburger icon." />
              </SerializedChatMessage>
            </list>
          </option>
          <option name="modifiedAt" value="1747654701214" />
          <option name="statisticInformation">
            <ChatStatisticInformation>
              <option name="sourceActionType" value="NEW_CHAT_ON_START" />
            </ChatStatisticInformation>
          </option>
          <option name="title">
            <SerializedChatTitle>
              <option name="custom" value="true" />
              <option name="text" value="Definition and Implementation of Hamburger Menu" />
            </SerializedChatTitle>
          </option>
          <option name="uid" value="54b518cf-921a-43d7-9395-1c3b4e6706f9" />
        </SerializedChat>
      </list>
    </option>
  </component>
  <component name="FileEditorManager">
    <leaf ideFingerprint="2lgu2hnqvdwui">
      <file>
        <entry file="file://$PROJECT_DIR$/README.md">
          <provider editor-type-id="split-provider[text-editor;markdown-preview-editor]" selected="true">
            <state split_layout="SHOW_PREVIEW" is_vertical_split="false">
              <first_editor />
              <second_editor />
            </state>
          </provider>
        </entry>
        <tab><![CDATA[{"tabTitle":"README.md","foregroundColor":-4473925,"textAttributes":{"name":"a"},"icon":[10,57,99,111,109,46,105,110,116,101,108,108,105,106,46,117,105,46,105,99,111,110,115,46,82,97,115,116,101,114,105,122,101,100,73,109,97,103,101,68,97,116,97,76,111,97,100,101,114,68,101,115,99,114,105,112,116,111,114,18,96,10,24,105,99,111,110,115,47,77,97,114,107,100,111,119,110,80,108,117,103,105,110,46,115,118,103,18,24,105,99,111,110,115,47,101,120,112,117,105,47,109,97,114,107,100,111,119,110,46,115,118,103,26,29,111,114,103,46,105,110,116,101,108,108,105,106,46,112,108,117,103,105,110,115,46,109,97,114,107,100,111,119,110,40,-33,-55,-17,-63,-7,-1,-1,-1,-1,1,48,0]}]]></tab>
      </file>
      <file current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/editor-open-popover.ui">
          <provider editor-type-id="text-editor" selected="true" />
        </entry>
        <tab><![CDATA[{"tabTitle":"editor-open-popover.ui","foregroundColor":-4473925,"textAttributes":{"name":"a"},"icon":[10,57,99,111,109,46,105,110,116,101,108,108,105,106,46,117,105,46,105,99,111,110,115,46,82,97,115,116,101,114,105,122,101,100,73,109,97,103,101,68,97,116,97,76,111,97,100,101,114,68,101,115,99,114,105,112,116,111,114,18,73,10,18,102,105,108,101,84,121,112,101,115,47,116,101,120,116,46,115,118,103,18,24,101,120,112,117,105,47,102,105,108,101,84,121,112,101,115,47,116,101,120,116,46,115,118,103,26,12,99,111,109,46,105,110,116,101,108,108,105,106,40,-122,-48,-19,-85,-2,-1,-1,-1,-1,1,48,0]}]]></tab>
      </file>
    </leaf>
  </component>
  <component name="FileTypeUsageLocalSummary"><![CDATA[{
  "data": {
    "PLAIN_TEXT": {
      "usageCount": 1,
      "lastUsed": 1747654726271
    },
    "Markdown": {
      "usageCount": 1,
      "lastUsed": 1747654630463
    }
  }
}]]></component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find />
    </findStrings>
    <replaceStrings>
      <replace />
    </replaceStrings>
  </component>
  <component name="IdeDocumentHistory"><![CDATA[{}]]></component>
  <component name="IgnoredFileRootStore">
    <option name="generatedRoots">
      <set>
        <option value="$PROJECT_DIR$/.idea" />
      </set>
    </option>
  </component>
  <component name="LanguageUsageStatistics">
    <language id="Markdown">
      <summary usageCount="1" lastUsage="1747654630464" />
    </language>
    <language id="TEXT">
      <summary usageCount="1" lastUsage="1747654726271" />
    </language>
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1" />
    <panes>
      <pane id="PackagesPane" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="gnome-text-editor" type="b2602c69:ProjectViewProjectNode" />
              <item name="dir{file:///home/xxx/IdeaProjects/gnome-text-editor}" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
          <presentation>
            <attributes />
            <data iconPath="expui/toolwindows/project.svg" iconPlugin="com.intellij" isLeaf="false" text="gnome-text-editor" />
            <item name="gnome-text-editor" type="b2602c69:ProjectViewProjectNode" />
            <presentation>
              <attributes>
                <map>
                  <entry key="filePath" value="$PROJECT_DIR$" />
                </map>
              </attributes>
              <data iconPath="expui/nodes/module.svg" iconPlugin="com.intellij" isLeaf="false" text="gnome-text-editor" />
              <item name="dir{file:///home/xxx/IdeaProjects/gnome-text-editor}" type="462c0819:PsiDirectoryNode" />
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/.foundry" />
                  </map>
                </attributes>
                <data iconPath="expui/nodes/folder.svg" iconPlugin="com.intellij" isLeaf="false" text=".foundry" />
                <item name="dir{file:///home/xxx/IdeaProjects/gnome-text-editor/.foundry}" type="462c0819:PsiDirectoryNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/.gitlab" />
                  </map>
                </attributes>
                <data iconPath="expui/nodes/folder.svg" iconPlugin="com.intellij" isLeaf="false" text=".gitlab" />
                <item name="dir{file:///home/xxx/IdeaProjects/gnome-text-editor/.gitlab}" type="462c0819:PsiDirectoryNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/.gitlab-ci" />
                  </map>
                </attributes>
                <data iconPath="expui/nodes/folder.svg" iconPlugin="com.intellij" isLeaf="false" text=".gitlab-ci" />
                <item name="dir{file:///home/xxx/IdeaProjects/gnome-text-editor/.gitlab-ci}" type="462c0819:PsiDirectoryNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/.idea" />
                  </map>
                </attributes>
                <data iconPath="expui/nodes/folder.svg" iconPlugin="com.intellij" isLeaf="false" text=".idea" />
                <item name="dir{file:///home/xxx/IdeaProjects/gnome-text-editor/.idea}" type="462c0819:PsiDirectoryNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/build-aux" />
                  </map>
                </attributes>
                <data iconPath="expui/nodes/folder.svg" iconPlugin="com.intellij" isLeaf="false" text="build-aux" />
                <item name="dir{file:///home/xxx/IdeaProjects/gnome-text-editor/build-aux}" type="462c0819:PsiDirectoryNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/data" />
                  </map>
                </attributes>
                <data iconPath="expui/nodes/folder.svg" iconPlugin="com.intellij" isLeaf="false" text="data" />
                <item name="dir{file:///home/xxx/IdeaProjects/gnome-text-editor/data}" type="462c0819:PsiDirectoryNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/help" />
                  </map>
                </attributes>
                <data iconPath="expui/nodes/folder.svg" iconPlugin="com.intellij" isLeaf="false" text="help" />
                <item name="dir{file:///home/xxx/IdeaProjects/gnome-text-editor/help}" type="462c0819:PsiDirectoryNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/po" />
                  </map>
                </attributes>
                <data iconPath="expui/nodes/folder.svg" iconPlugin="com.intellij" isLeaf="false" text="po" />
                <item name="dir{file:///home/xxx/IdeaProjects/gnome-text-editor/po}" type="462c0819:PsiDirectoryNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/src" />
                  </map>
                </attributes>
                <data iconPath="expui/nodes/folder.svg" iconPlugin="com.intellij" isLeaf="false" text="src" />
                <item name="dir{file:///home/xxx/IdeaProjects/gnome-text-editor/src}" type="462c0819:PsiDirectoryNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/subprojects" />
                  </map>
                </attributes>
                <data iconPath="expui/nodes/folder.svg" iconPlugin="com.intellij" isLeaf="false" text="subprojects" />
                <item name="dir{file:///home/xxx/IdeaProjects/gnome-text-editor/subprojects}" type="462c0819:PsiDirectoryNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/.editorconfig" />
                  </map>
                </attributes>
                <data iconPath="expui/fileTypes/editorConfig.svg" iconPlugin="com.intellij" isLeaf="true" text=".editorconfig" />
                <item name=".editorconfig" type="ab9368bb:PsiFileNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/.gitignore" />
                  </map>
                </attributes>
                <data iconPath="expui/fileTypes/ignored.svg" iconPlugin="com.intellij" isLeaf="true" text=".gitignore" />
                <item name=".gitignore" type="ab9368bb:PsiFileNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/.gitlab-ci.yml" />
                  </map>
                </attributes>
                <data iconPath="org/jetbrains/plugins/gitlab/gitLabLogo.svg" iconPlugin="org.jetbrains.plugins.gitlab" isLeaf="true" text=".gitlab-ci.yml" />
                <item name=".gitlab-ci.yml" type="ab9368bb:PsiFileNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/CONTRIBUTING.md" />
                  </map>
                </attributes>
                <data iconPath="icons/expui/markdown.svg" iconPlugin="org.intellij.plugins.markdown" isLeaf="true" text="CONTRIBUTING.md" />
                <item name="CONTRIBUTING.md" type="ab9368bb:PsiFileNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/COPYING" />
                  </map>
                </attributes>
                <data iconPath="expui/fileTypes/text.svg" iconPlugin="com.intellij" isLeaf="true" text="COPYING" />
                <item name="COPYING" type="ab9368bb:PsiFileNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/gnome-text-editor.doap" />
                  </map>
                </attributes>
                <data iconPath="expui/fileTypes/text.svg" iconPlugin="com.intellij" isLeaf="true" text="gnome-text-editor.doap" />
                <item name="gnome-text-editor.doap" type="ab9368bb:PsiFileNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/meson.build" />
                  </map>
                </attributes>
                <data iconPath="expui/fileTypes/text.svg" iconPlugin="com.intellij" isLeaf="true" text="meson.build" />
                <item name="meson.build" type="ab9368bb:PsiFileNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/meson_options.txt" />
                  </map>
                </attributes>
                <data iconPath="expui/fileTypes/text.svg" iconPlugin="com.intellij" isLeaf="true" text="meson_options.txt" />
                <item name="meson_options.txt" type="ab9368bb:PsiFileNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/NEWS" />
                  </map>
                </attributes>
                <data iconPath="expui/fileTypes/text.svg" iconPlugin="com.intellij" isLeaf="true" text="NEWS" />
                <item name="NEWS" type="ab9368bb:PsiFileNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/org.gnome.TextEditor.Devel.json" />
                  </map>
                </attributes>
                <data iconPath="expui/fileTypes/json.svg" iconPlugin="com.intellij" isLeaf="true" text="org.gnome.TextEditor.Devel.json" />
                <item name="org.gnome.TextEditor.Devel.json" type="ab9368bb:PsiFileNode" />
              </presentation>
              <presentation>
                <attributes>
                  <map>
                    <entry key="filePath" value="$PROJECT_DIR$/README.md" />
                  </map>
                </attributes>
                <data iconPath="icons/expui/markdown.svg" iconPlugin="org.intellij.plugins.markdown" isLeaf="true" text="README.md" />
                <item name="README.md" type="ab9368bb:PsiFileNode" />
              </presentation>
            </presentation>
            <presentation>
              <attributes />
              <data iconPath="expui/nodes/library.svg" iconPlugin="com.intellij" isLeaf="false" text="External Libraries" />
              <item name="External Libraries" type="cb654da1:ExternalLibrariesNode" />
            </presentation>
            <presentation>
              <attributes />
              <data iconPath="expui/fileTypes/scratches.svg" iconPlugin="com.intellij" isLeaf="false" text="Scratches and Consoles" />
              <item name="Scratches and Consoles" type="b85a3e1f:ScratchTreeStructureProvider$MyProjectNode" />
            </presentation>
          </presentation>
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="357000" />
  </component>
  <component name="ToolWindowManager">
    <layoutV2>
      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.34245077" />
      <window_info id="Commit" order="1" weight="0.25" />
      <window_info id="Structure" order="2" side_tool="true" weight="0.25" />
      <window_info anchor="bottom" id="Version Control" order="0" />
      <window_info anchor="bottom" id="Problems" order="1" />
      <window_info anchor="bottom" id="Problems View" order="2" />
      <window_info anchor="bottom" id="Terminal" order="3" />
      <window_info anchor="bottom" id="Services" order="4" />
      <window_info anchor="bottom" id="Python Packages" order="5" />
      <window_info anchor="right" content_ui="combo" id="Notifications" order="0" weight="0.25" />
      <window_info active="true" anchor="right" id="AIAssistant" order="1" visible="true" weight="0.34245077" />
      <window_info anchor="right" id="Database" order="2" weight="0.25" />
      <window_info anchor="right" id="Gradle" order="3" weight="0.25" />
      <window_info anchor="right" id="Maven" order="4" weight="0.25" />
      <window_info anchor="right" id="Python Console" order="5" />
      <window_info anchor="right" id="ElectroJunToolWindow" order="6" />
      <unified_weights left="0.34245077" right="0.34245077" />
    </layoutV2>
    <recentWindows>
      <value>AIAssistant</value>
      <value>Project</value>
    </recentWindows>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SHOW_PREVIEW" is_vertical_split="false">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/editor-open-popover.ui">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
  </component>
</project>